#!/bin/bash

trap 'kill $tmpcount_pid ; rm "$tmpcount" ; exit 130' INT

enable_bash=@enable_bash@
enable_c=@enable_c@
enable_python2=@enable_python2@
enable_python3=@enable_python3@

test_command () {

  echo "Benchmarking ${TD[@]}"
  echo -n "Please wait for 5 seconds..."
  tmpcount="$(mktemp)"
  ( trap exit TERM; "${SETUP[@]}"; while :; do "${TD[@]}" 180122; echo >> "$tmpcount"; done ) &>/dev/null &
  tmpcount_pid=$!
  sleep 5
  kill $tmpcount_pid
  echo -ne "\e[3K\e[0G$(bc <<< "$(wc -l < "$tmpcount") / 5") conversions per second via $VIA.\n"
  rm "$tmpcount"

}

# Performance test for src/td.sh
if test "x$enable_bash" != xno; then

  SCRIPT='@abs_top_builddir@/src/td.sh'

  SETUP=(source "$SCRIPT")
  VIA='Bash function calls'
  TD=(print_td)

  test_command

  SETUP=()
  VIA='Bash script executions'
  TD=("$SCRIPT")

  test_command

fi

# Performance test for src/td
if test "x$enable_c" != xno; then

  SETUP=()
  VIA='command executions'
  TD=('@abs_top_builddir@/src/td')

  test_command

fi

# Performance test for bash/td
if test "x$enable_bash_loadable" != xno; then

  SETUP=('enable' '-f' '@abs_top_builddir@/bash/td' 'td')
  VIA='Bash loadable executions'
  TD=('td')

  test_command

fi

# Performance test for Python 2 binding
if test "x$enable_python2" != xno; then

  SETUP=()
  VIA='Python 2 script executions'
  TD=(python2 '@abs_top_builddir@/tests/testsuite.td.py')

  test_command

fi

# Performance test for Python 3 binding
if test "x$enable_python3" != xno; then

  SETUP=()
  VIA='Python 3 script executions'
  TD=(python3 '@abs_top_builddir@/tests/testsuite.td.py')

  test_command

fi
